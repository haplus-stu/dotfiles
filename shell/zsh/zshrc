source $HOME/config/scripts/utils.sh
check_OS

#alias{{{
alias tkill="tmux kill-server"
alias g="git"
alias mkdir="mkdir -p"
alias d="docker"
alias dc="docker-compose"
alias ds="sh $HOME/config/scripts/docker.sh"
alias cp="cp -r"
alias recon="source ~/.${SHELL##*/}rc"
alias shconf="$EDITOR ~/.${SHELL##*/}rc"
alias vim="nvim"
alias zz="zoxide"
alias ys="yay -S"
alias rmd="rm -rf"
alias gc="my_git_clone"
#change dir
alias cdw="cd ~/workspace/"
alias cdv="cd ~/vagrant/"
alias cdd="cd ~/config/"

#docker{{{
alias docker-purge="docker stop $(docker ps -qa) && docker rm $(docker ps -qa)"
#}}}

case ${OS} in
  Mac*)
       alias ls="ls -aG"
       alias ll="ls -alG"
  ;;
  Linux*)
       alias ls="ls -a --color"
       alias ll="ls -al --color";
  ;;
esac
#}}}

eval "$(zoxide init zsh)"

#fzf{{{

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

function select-history() {
  BUFFER=$(history -n -r 1 | fzf --no-sort +m --query "$LBUFFER" --prompt=">> ")
  CURSOR=$#BUFFER
}

zle -N select-history
bindkey '^r' select-history

function ghq-fzf() {
  local src=$(ghq list | fzf --preview "ls -laTp $(ghq root)/{} | tail -n+4 | awk '{print \$9\"/\"\$6\"/\"\$7 \" \" \$10}'")
  if [ -n "$src" ]; then
    BUFFER="cd $(ghq root)/$src && ls"
    zle accept-line
    zle -R -c
  fi

}
zle -N ghq-fzf
bindkey '^[' ghq-fzf

#}}}


# メモリに保存される履歴の件数
export HISTSIZE=100
# 履歴ファイルに保存される履歴の件数
export SAVEHIST=10000
# norecord duplicate command
setopt hist_ignore_dups
#no record history command
setopt hist_no_store

setopt hist_save_no_dups

#do not create .lesshist
export LESSHISTFILE=-

#zsh completion
autoload -Uz compinit && compinit

PS1="%n@%m:%~$ " #prompt

### Added by Zinit's installer
if [[ ! -f $HOME/.zinit/bin/zinit.zsh ]]; then
    print -P "%F{33}▓▒░ %F{220}Installing %F{33}DHARMA%F{220} Initiative Plugin Manager (%F{33}zdharma/zinit%F{220})…%f"
    command mkdir -p "$HOME/.zinit" && command chmod g-rwX "$HOME/.zinit"
    command git clone https://github.com/zdharma/zinit "$HOME/.zinit/bin" && \
        print -P "%F{33}▓▒░ %F{34}Installation successful.%f%b" || \
        print -P "%F{160}▓▒░ The clone has failed.%f%b"
fi

source "$HOME/.zinit/bin/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit
### End of Zinit's installer chunk
# zinit light zsh-users/zsh-autosuggestions
zinit ice lucid depth"1" blockf
zinit light yuki-yano/zeno.zsh

### zeno.zsh
bindkey ' '  zeno-auto-snippet
bindkey '^m' zeno-auto-snippet-and-accept-line
# bindkey '^i' zeno-completion



my_git_clone(){

  url=$1
  repo_name=$(echo "${url##*/}")


  if [[ ! -e $HOME/workspace ]]; then
    mkdir $HOME/workspace
  fi


  if [[ ${target} = *.git* ]]; then
   repo_name=$(echo "${repo_name%.*}")
  fi

  git clone $1 $HOME/workspace/${repo_name}

  confirm "move cloned directiory?" "cd $HOME/workspace/${repo_name}"
}

if [ -e $HOME/.nix-profile/etc/profile.d/nix.sh ]; then
    . $HOME/.nix-profile/etc/profile.d/nix.sh;
fi
